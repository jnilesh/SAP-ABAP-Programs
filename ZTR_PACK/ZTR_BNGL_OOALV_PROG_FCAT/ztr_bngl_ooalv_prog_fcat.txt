*&---------------------------------------------------------------------*
*& Report ZTR_BNGL_OOALV_PROG_FCAT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZTR_BNGL_OOALV_PROG_FCAT.

INCLUDE ZTR_BNGL_OOALV_PROG_FCAT_TOP.


SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.

SELECT-OPTIONS S_MATNR FOR LV_MATNR.

SELECTION-SCREEN END OF BLOCK B1.

START-OF-SELECTION.

PERFORM GET_DATA.

PERFORM GET_FCAT.

CALL SCREEN 0100.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
FORM GET_DATA .
SELECT M~MATNR
       M~MBRSH
       M~MTART
       M~MEINS
       M~BRGEW
       M~NTGEW
      P~WERKS
      k~maktx
      k~spras

   INTO TABLE IT_TAB

   FROM MARA AS M
   INNER JOIN MARC AS P
   ON M~MATNR EQ P~MATNR

   INNER JOIN MAkt AS k
   on M~MATNR EQ k~MATNR

  WHERE M~MATNR IN S_MATNR AND
        K~spras eq 'E'.
IF SY-SUBRC EQ 0.

  WRITE 'RECORDS ARE FOUND '.

  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_FCAT
*&---------------------------------------------------------------------*
FORM GET_FCAT .


* MATNR.

WA_FCAT-COL_POS = '1'.
WA_FCAT-FIELDNAME = 'MATNR'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT NUMBER'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

* MBRSH.

WA_FCAT-COL_POS = '2'.
WA_FCAT-FIELDNAME = 'MBRSH'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT SECTOR'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

* MTART.

WA_FCAT-COL_POS = '3'.
WA_FCAT-FIELDNAME = 'MTART'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT TYPE'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


* MEINS.

WA_FCAT-COL_POS = '4'.
WA_FCAT-FIELDNAME = 'MEINS'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT UOM'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


* BRGEW.

WA_FCAT-COL_POS = '5'.
WA_FCAT-FIELDNAME = 'BRGEW'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT GROSS WEIGHT'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

* NTGEW
WA_FCAT-COL_POS = '6'.
WA_FCAT-FIELDNAME = 'NTGEW'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT NET WEIGHT'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


* WERKS
WA_FCAT-COL_POS = '7'.
WA_FCAT-FIELDNAME = 'WERKS'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT PLANT'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

* MAKTX
WA_FCAT-COL_POS = '8'.
WA_FCAT-FIELDNAME = 'MAKTX'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT SHORT DESC'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


* SPRAS
WA_FCAT-COL_POS = '9'.
WA_FCAT-FIELDNAME = 'SPRAS'.
WA_FCAT-TABNAME =  'IT_TAB'.
WA_FCAT-COLTEXT = 'MAT TEXT LANGUAGE'.

APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS SPACE.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.
CASE SY-UCOMM.
  WHEN 'EXIT'.
  LEAVE TO SCREEN 0.
ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_OUT  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_OUT OUTPUT.

 IT_LAYOUT-ZEBRA = 'X'.
*IT_LAYOUT-NO_TOOLBAR = 'X'.
IT_LAYOUT-GRID_TITLE = 'MAT MASTER OOALV DISP'.

CREATE OBJECT I_CONTAINER
  EXPORTING
*    PARENT                      =
    CONTAINER_NAME              = 'CUST_CNT'
*    STYLE                       =
*    LIFETIME                    = lifetime_default
*    REPID                       =
*    DYNNR                       =
*    NO_AUTODEF_PROGID_DYNNR     =
*  EXCEPTIONS
*    CNTL_ERROR                  = 1
*    CNTL_SYSTEM_ERROR           = 2
*    CREATE_ERROR                = 3
*    LIFETIME_ERROR              = 4
*    LIFETIME_DYNPRO_DYNPRO_LINK = 5
*    OTHERS                      = 6
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.


CREATE OBJECT I_ALVGRID
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          =  I_CONTAINER
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    OTHERS            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.


CALL METHOD I_ALVGRID->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
    I_STRUCTURE_NAME              = 'TY_TAB'
*    IS_VARIANT                    =
*    I_SAVE                        =
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = IT_LAYOUT
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = IT_TAB
    IT_FIELDCATALOG               = IT_FCAT
*    IT_SORT                       =
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    OTHERS                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.


ENDMODULE.
