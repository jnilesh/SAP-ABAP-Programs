*&---------------------------------------------------------------------*
*& Report ZTR_CGKL_BDC_CALLTRANS_METHOD
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZTR_CGKL_BDC_CALLTRANS_METHOD.

INCLUDE ZTR_CGKL_BDC_CALLTRANS_TOP.


PARAMETERS P_FILE TYPE RLGRAP-FILENAME.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
CALL FUNCTION 'F4_FILENAME'
 EXPORTING
   PROGRAM_NAME        = SYST-CPROG
   DYNPRO_NUMBER       = SYST-DYNNR
*   FIELD_NAME          = ' '
 IMPORTING
   FILE_NAME           = P_FILE
          .

  START-OF-SELECTION.

  DATA P_FILE_STR TYPE STRING.
  P_FILE_STR = P_FILE.

 CALL FUNCTION 'GUI_UPLOAD'
   EXPORTING
     FILENAME                      = P_FILE_STR
    FILETYPE                      = 'ASC'
    HAS_FIELD_SEPARATOR           = 'X'
   TABLES
     DATA_TAB                      = IT_TAB
           .
 IF SY-SUBRC <> 0.
* Implement suitable error handling here
 ENDIF.


LOOP AT IT_TAB INTO WA_TAB.

LV_INDEX = SY-TABIX.
perform bdc_dynpro      using 'SAPLMGMM' '0060'.

perform bdc_field       using 'BDC_CURSOR'
                              'RMMG1-MTART'.
perform bdc_field       using 'BDC_OKCODE'
                              '=ENTR'.
perform bdc_field       using 'RMMG1-MATNR'
                              WA_TAB-MATNR. "
perform bdc_field       using 'RMMG1-MBRSH'
                              WA_TAB-MBRSH.   "
perform bdc_field       using 'RMMG1-MTART'
                              WA_TAB-MTART.   "
perform bdc_dynpro      using 'SAPLMGMM' '0070'.
perform bdc_field       using 'BDC_CURSOR'
                              'MSICHTAUSW-DYTXT(01)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=ENTR'.
perform bdc_field       using 'MSICHTAUSW-KZSEL(01)'
                              'X'.
perform bdc_dynpro      using 'SAPLMGMM' '4004'.
perform bdc_field       using 'BDC_OKCODE'
                              '=BU'.
perform bdc_field       using 'MAKT-MAKTX'
                             WA_TAB-MAKTX.     "
perform bdc_field       using 'BDC_CURSOR'
                              'MARA-MATKL'.
perform bdc_field       using 'MARA-MEINS'
                              WA_TAB-MEINS.            "
perform bdc_field       using 'MARA-MATKL'
                             WA_TAB-MATKL.           "


CALL TRANSACTION 'MM01' USING IT_BDCDATA MODE 'A'
                              UPDATE 'S'.
*                 *          MESSAGES INTO IT_BDCMSGCOLL
IF SY-SUBRC NE 0.

 CALL FUNCTION 'FORMAT_MESSAGE'
  EXPORTING
*    ID              = SY-MSGID
    LANG            = 'EN'
*    NO              = SY-MSGNO
*    V1              = SY-MSGV1
*    V2              = SY-MSGV2
*    V3              = SY-MSGV3
*    V4              = SY-MSGV4
  IMPORTING
    MSG             = LV_MSG
*  EXCEPTIONS
*    NOT_FOUND       = 1
*    OTHERS          = 2
           .
 IF SY-SUBRC <> 0.
* Implement suitable error handling here
 ENDIF.

 CONCATENATE LV_INDEX LV_MSG INTO LV_MSG SEPARATED BY '*'.
  WRITE LV_MSG.

ENDIF.





REFRESH IT_BDCDATA.


ENDLOOP.



*&---------------------------------------------------------------------*
*&      Form  BDC_DYNPRO
*&---------------------------------------------------------------------*
FORM BDC_DYNPRO  USING  P_PROGRAM
                        P_DYNPRO   .

 CLEAR IT_BDCDATA.
 IT_BDCDATA-PROGRAM = P_PROGRAM.
 IT_BDCDATA-DYNPRO = P_DYNPRO.
 IT_BDCDATA-DYNBEGIN = 'X'.
 APPEND IT_BDCDATA.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BDC_FIELD
*&---------------------------------------------------------------------*
FORM BDC_FIELD  USING  P_FNAM
                       P_FVAL.
CLEAR IT_BDCDATA.
 IT_BDCDATA-FNAM = P_FNAM.
 IT_BDCDATA-FVAL = P_FVAL.

 APPEND IT_BDCDATA.
ENDFORM.
