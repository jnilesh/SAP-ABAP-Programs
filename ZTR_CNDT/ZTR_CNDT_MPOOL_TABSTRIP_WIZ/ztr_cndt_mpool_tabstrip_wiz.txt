*&---------------------------------------------------------------------*
*& Modulpool  ZTR_CNDT_MPOOL_TABSTRIP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
PROGRAM ZTR_CNDT_MPOOL_TABSTRIP_WIZ.

CONTROLS TAB_STRP1 TYPE TABSTRIP.

DATA : LV_VAR1 TYPE I,
       LV_VAR2 TYPE I,
       LV_SUM TYPE I.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS SPACE.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.
CASE SY-UCOMM.
  WHEN 'TAB1'.
  TAB_STRP1-ACTIVETAB = 'TAB1'. "FCT CODE

  WHEN 'TAB2'.
  TAB_STRP1-ACTIVETAB = 'TAB2'. "FCT CODE


  WHEN 'BACK' or 'CANCEL' or 'EXIT'.
    LEAVE to SCREEN 0.

ENDCASE.

ENDMODULE.



MODULE STATUS_0120 OUTPUT.

LV_SUM = LV_VAR1 + LV_VAR2.

ENDMODULE.
*&---------------------------------------------------------------------*
**&      Module  USER_COMMAND_0110  INPUT
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*MODULE user_command_0110 INPUT.
*
*ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0110  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0110 INPUT.

ENDMODULE.

*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'TAB_CNDT'
CONSTANTS: BEGIN OF C_TAB_CNDT,
             TAB1 LIKE SY-UCOMM VALUE 'TAB_CNDT_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'TAB_CNDT_FC2',
           END OF C_TAB_CNDT.
*&SPWIZARD: DATA FOR TABSTRIP 'TAB_CNDT'
CONTROLS:  TAB_CNDT TYPE TABSTRIP.
DATA:      BEGIN OF G_TAB_CNDT,
             SUBSCREEN   LIKE SY-DYNNR,
PROG        LIKE SY-REPID VALUE 'ZTR_CNDT_MPOOL_TABSTRIP_WIZ',
             PRESSED_TAB LIKE SY-UCOMM VALUE C_TAB_CNDT-TAB1,
           END OF G_TAB_CNDT.
DATA:      OK_CODE LIKE SY-UCOMM.

*&SPWIZARD: OUTPUT MODULE FOR TS 'TAB_CNDT'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: SETS ACTIVE TAB
MODULE TAB_CNDT_ACTIVE_TAB_SET OUTPUT.
  TAB_CNDT-ACTIVETAB = G_TAB_CNDT-PRESSED_TAB.
  CASE G_TAB_CNDT-PRESSED_TAB.
    WHEN C_TAB_CNDT-TAB1.
      G_TAB_CNDT-SUBSCREEN = '0101'.
    WHEN C_TAB_CNDT-TAB2.
      G_TAB_CNDT-SUBSCREEN = '0102'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TS 'TAB_CNDT'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: GETS ACTIVE TAB
MODULE TAB_CNDT_ACTIVE_TAB_GET INPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_TAB_CNDT-TAB1.
      G_TAB_CNDT-PRESSED_TAB = C_TAB_CNDT-TAB1.
    WHEN C_TAB_CNDT-TAB2.
      G_TAB_CNDT-PRESSED_TAB = C_TAB_CNDT-TAB2.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*MODULE USER_COMMAND_0100 INPUT.
*
*ENDMODULE.
