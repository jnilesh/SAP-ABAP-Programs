*&---------------------------------------------------------------------*
*&  Include           ZTR_ATP_INHERITANCE2_TOP
*&---------------------------------------------------------------------*

*-------------------------------------------------------------LOCAL CLASS DEFINITION-------------------------------
CLASS LCL_AIR DEFINITION.

  PUBLIC SECTION.

    CONSTANTS : POS_1 TYPE I VALUE 30.

    METHODS: CONSTRUCTOR IMPORTING
                           IM_NAME  TYPE STRING
                           IM_PLANE TYPE SAPLANE-PLANETYPE,
      DISPLAY_ATRIBUTES.

    CLASS-METHODS : DISPLAY_NO_PLANES.

  PRIVATE SECTION.

    METHODS: GET_TECHNICAL_ATTRIBUTES
      IMPORTING IM_TYPE    TYPE SAPLANE-PLANETYPE "PARAMETER PASSING
      EXPORTING EX_WEIGHT  TYPE S_PLAN_WEI      "RETURING PARAMETER
                EX_TANKCAP TYPE S_CAPACITY.

    DATA: NAME  TYPE STRING,
          PLANE TYPE SAPLANE-PLANETYPE.

    CLASS-DATA : NO_AIRS TYPE I.

ENDCLASS.

*---------------------------------------------------------------LOCAL CLASS IMPLEMENTATION----------------------------
CLASS LCL_AIR IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    NAME = IM_NAME.
    PLANE = IM_PLANE.
    NO_AIRS = NO_AIRS + 1.
  ENDMETHOD.

  METHOD DISPLAY_ATRIBUTES.

    DATA: WEIGHT TYPE SAPLANE-WEIGHT,
          CAP TYPE SAPLANE-TANKCAP.

    WRITE: / 'NAME OF PLANE'(001), AT POS_1 NAME,
           / 'AIRPLANE TYPE '(002), AT POS_1 PLANE.

    GET_TECHNICAL_ATTRIBUTES( EXPORTING IM_TYPE = PLANE
                           IMPORTING  EX_WEIGHT = WEIGHT
                                     EX_TANKCAP = CAP ).

    WRITE: / 'WEIGHT:'(003), WEIGHT,
             'TANKCAPACITY'(004), CAP.
  ENDMETHOD.

  METHOD DISPLAY_NO_PLANES.

    WRITE: / 'NUMBER OF AIRPLANES'(CA1),
    AT POS_1 NO_AIRS.

ENDMETHOD.

    METHOD GET_TECHNICAL_ATTRIBUTES.
      SELECT SINGLE WEIGHT TANKCAP FROM SAPLANE
        INTO (EX_WEIGHT ,EX_TANKCAP)
        WHERE PLANETYPE  = IM_TYPE.

      IF SY-SUBRC <> 0.
        EX_WEIGHT = 100000.
        EX_TANKCAP = 10000.

      ENDIF.
    ENDMETHOD.
ENDCLASS.

*-------------------------------------------------------------LOCAL CLASS INHERITING CLASS------------------------------------------------------

CLASS LCL_PLANE1 DEFINITION INHERITING FROM LCL_AIR.

  PUBLIC SECTION.

    METHODS: CONSTRUCTOR IMPORTING IM_NAME   TYPE STRING
                                   IM_PLANE  TYPE SAPLANE-PLANETYPE
                                   IM_PLANE1 TYPE SCPLANE-CARGOMAX.

    METHODS: DISPLAY_ATRIBUTES REDEFINITION." IMPLEMENTATION IS CHANGED IN

    METHODS: GET_PLANE1 RETURNING VALUE(RE_PLANE1) TYPE SCPLANE-CARGOMAX.

  PRIVATE SECTION.
    DATA: MAX_PLANE1 TYPE SCPLANE-CARGOMAX.

ENDCLASS.

*-----------------------------------------------------------LOCAL CLASS IMPLEMENTATION INHERITED CLASS-----------------------

CLASS LCL_PLANE1 IMPLEMENTATION.

  METHOD CONSTRUCTOR .
     CALL METHOD SUPER->CONSTRUCTOR(  IM_NAME = IM_NAME  IM_PLANE = IM_PLANE ).
    MAX_PLANE1 = IM_PLANE1.
  ENDMETHOD.

  METHOD   DISPLAY_ATRIBUTES.
    SUPER->DISPLAY_ATRIBUTES( ).
    WRITE : / 'MAX PLANE1', MAX_PLANE1.
    ULINE.
  ENDMETHOD.

  METHOD GET_PLANE1.
    RE_PLANE1 = MAX_PLANE1.
   ENDMETHOD.
ENDCLASS.

*-----------------------------------------------------------LOCAL CLASS PASSENGER INHERITING FROM LCL AIR--------------------

CLASS LCL_PASSENGER DEFINITION INHERITING FROM LCL_AIR.

  PUBLIC SECTION.
    METHODS: CONSTRUCTOR IMPORTING IM_NAME  TYPE STRING
                                   IM_PLANE TYPE SAPLANE-PLANETYPE
                                   IM_SEATS TYPE SFLIGHT-SEATSMAX.
    METHODS: DISPLAY_ATRIBUTES REDEFINITION.

  PRIVATE SECTION.
    DATA: MAX_SEATS TYPE SFLIGHT-SEATSMAX.

ENDCLASS.

*----------------------------------------------------------LOCAL CLASS PASSENGER INHERITING FROM LCL AIR IMPLEMENTATION------

CLASS LCL_PASSENGER IMPLEMENTATION.

  METHOD CONSTRUCTOR.

  CALL METHOD SUPER->CONSTRUCTOR(  IM_NAME = IM_NAME  IM_PLANE = IM_PLANE ).
  MAX_SEATS = IM_SEATS.
ENDMETHOD.
METHOD   DISPLAY_ATRIBUTES.
  SUPER->DISPLAY_ATRIBUTES( ).
  WRITE : / 'MAX SEATS',MAX_SEATS.
  ULINE.
ENDMETHOD.
ENDCLASS.
